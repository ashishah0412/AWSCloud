name: Terraform Infra Pipeline - Project 02

on: workflow_dispatch

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.x.x

      - name: Terraform Init
        run: terraform init
        working-directory: ./AWSCloud/02-containerized-microservices/infra

  validate:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.x.x

      - name: Terraform Init (re-run for validate job)
        run: terraform init
        working-directory: ./AWSCloud/02-containerized-microservices/infra

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./AWSCloud/02-containerized-microservices/infra

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.x.x

      - name: Terraform Init (re-run for plan job)
        run: terraform init
        working-directory: ./AWSCloud/02-containerized-microservices/infra

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./AWSCloud/02-containerized-microservices/infra

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./AWSCloud/02-containerized-microservices/infra/tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.x.x

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: ./AWSCloud/02-containerized-microservices/infra

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./AWSCloud/02-containerized-microservices/infra

  destroy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.x.x

      - name: Terraform Init (re-run for destroy job)
        run: terraform init
        working-directory: ./AWSCloud/02-containerized-microservices/infra

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./AWSCloud/02-containerized-microservices/infra


